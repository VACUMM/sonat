################################################################################
#
# Specification file for the SONAT configuration
#
################################################################################

################################################################################
[session] # current session specifications

workdir=directory('.') # where all created files go
usercodefile=file(default=None) # user code file name


##############################################################################
[logger] # logging system

level=option(debug,verbose,info,notice,warning,error,default=info) # logging level
file=string(default=sonat.log)) # logging file
redirect_warnings=boolean(default=True) # redirect python warnings
redirect_stdout=option(False,debug,verbose,info,notice,warning,error,default=debug) # where to redirect stdout


################################################################################
[domain] # spatio-temporal domain

xmin=float(default=None) # min longitude
xmax=float(default=None) # max longitude
ymin=float(default=None) # min latitude
ymax=float(default=None) # max latitude
#zmin=float(default=None) # min negative level like -2500.
#zmax=float(default=None) # max negative level like -10.
tmin=date(default=None) # min time like 2012-10-06 10:20
tmax=date(default=None) # max time like 2012-10-06 10:20


##############################################################################
[cmaps] # default colormaps for some fields and quantities

default=string(default=viridis) # defalt colormap (None to use matplotlib default)
temp=string(default=cmocean_thermal) # colormap for temperature
sal=string(default=cmocean_haline) # colormap for salinity
chla=string(default=cmocean_algae) # colormap for ChlA
nutr=string(default=cmocean_matter) # colormap for nutrients
turb=string(default=cmocean_turbid) # colormap for turbididty
uv=string(default=cmocean_delta) # colormap for velocity components
speed=string(default=cmocean_speed) # colormap for velocity modulus
skew=string(default="anom") # colormap for skewness
kurtosis=string(default="anom") # colormap for kurtosis
skewtest=string(default="anom") # colormap for skewtest
kurtosistest=string(default="anom") # colormap for kurtosistest
normaltest=string(default="pos") # colormap for normaltest
anom=string(default=cmocean_balance) # colormap for anomalies with symetric levels
pos=string(default=cmocean_speed) # colormap for positive data like RMS with zero min
error=string(default=cmocean_speed) # quadratic errors


##############################################################################
[plots] # type of plots
full2d=boolean(default=True) # plot all obs on maps (when applicable)?
full3d=boolean(default=True) # plot all obs in a 3D view (when applicable)?
surf=boolean(default=True) # pure surface plot?
bottom=boolean(default=False) # pure bottom plot?

    [[[sections]]]
    zonal=floats(default=list()) # latitude of zonal sections
    merid=floats(default=list()) # longitude of zonal sections
    horiz=floats(default=list()) # depth (negative) of horizontal sections


##############################################################################
[norms] # norm per variable that defaults to the standard deviation if the model

temp=float(default=None) # norm for temperature
sal=float(default=None) # norm for salinity
chla=float(default=None) # norm for ChlA
nutr=float(default=None) # norm for nutrients
turb=float(default=None) # norm for turbididty
uv=float(default=None) # norm for velocity components
__many__=float(default=None) # norm for another variable


##############################################################################
[ens] # ensemble from model outputs

ncensfile=file(default="ENS/sonat.ens.nc") # netcdf ensemble file
varnames=strings(default=list()) # selection of variable names which defaults to all

figpatslice=file(default="ENS/sonat.ens.{diagname}_{varname}_{slicename}_{loc}.png")
figpatgeneric=file(default="ENS/sonat.ens.{diagname}.png")
htmlfile=file(default="ENS/sonat.ens.html")

    [[gen]]

    ncmodfiles=files(default=list()) # list of netcdf files or patterns from which to generate the ensemble
    nens=integer(default=50,min=2) # final ensemble size
    enrich=float(default=2.,min=1) # enrichment factor
    norms=floats(default=list()) # TODO: use norms for ens!
    depths=floats(default=list(-200,-150,-50,-25,-10,0.)) # negative depths for 3D model extractions

        [[levels]] # extraction levels per variable for generating an ensemble
        __many__=level(default=None) # tuple, list of floats, "surf", "bottom", "3d" or None

        [[fromobs]] # specs from observations

        activate=boolean(default=True) # activate specs from obs?
        varnames=integer(min=0,max=2,default=2) # use var names from obs? 0:no, 1:yes, 2:merge
        lon=integer(min=0,max=2,default=2)  # use longitude bounds from obs? 0:no, 1:yes, 2:intersection
        lat=integer(min=0,max=2,default=2)  # use latitude bounds from obs?0:no, 1:yes, 2:intersection
        level=integer(min=0,max=2,default=2) # use level from obs? 0:no, 1:yes, 2:merge
        margin=float(default=1.) # margin in degrees from obs bounds

    [[diags]] # select ensemble diagnostics

    mean=boolean(default=False)
    variance=boolean(default=True)
    skew=boolean(default=True)
    kurtosis=boolean(default=True)
    skewtest=boolean(default=True)
    kurtosistest=boolean(default=True)
    normaltest=boolean(default=True)

        [[[plots]]] # plots args per diag

        explained_variance=dict(default="figsize=(5.5,2),vmin=0")
        local_explained_variance=dict(default="vmin=0,vmax=100,cmap='pos'")
        skew=dict(default="")
        kurtosis=dict(default="")
        skewtest=dict(default="")
        kurtosistest=dict(default="")
        normaltest=dict(default="")


##############################################################################
[obs] # observation platforms

figpat=file(default='OBS/sonat.obs.{platform_type}_{platform_name}_{var_name}_{slice_type}_{slice_loc}.png')
htmlfile=file(default="OBS/sonat.obs.html")

    [[platforms]] # platforms list

        [[[__many__]]]

        activate=boolean(default=True) # use it ?
        type=string(default=generic) # platform type
        ncfile=file # netcdf specification file
        varnames=strings(default=None) # list of netcdf generic variable names without the _error suffix
        color=string(default=None) # color string to choose instead of the default from color cycling
        marker=string(default=None) # marker instead of the default from marker cycling

    [[plots]] # plot specs

    locations=boolean(default=True) # plot pure locations
    varnames=strings(default=list(()) # list of varnames to plot (without the _error suffix)
    colorcycle=strings(default=list(b,g,r,c,m,y)) # list of color strings to cycle on
    markercycle=strings(default=list(o,^,s,<,>,*)) # list of markers to cycle on



##############################################################################
[arm] # Pure ARM parameters

    [[analysis]]
    score_type=string(default=fnev) # default score type
    htmlfile=file(default="ARM/sonat.arm.html")
    figfile_spect=file(default="ARM/sonat.arm.spect.png")
    figpat_arm=file(default="ARM/sonat.arm.arm.mode{mode}_{var_name}_{slice_type}_{slice_loc}.png")
    figpat_rep=file(default="ARM/sonat.arm.rep.mode{mode}_{var_name}_{slice_type}_{slice_loc}.png")
    ncfile_spect=file(ddefault="ARM/sonat.arm.spect.nc")
    ncpat_arm=file(default="ARM/sonat.arm.arm.{platform_name}.nc")
    ncfile_rep=file(default="ARM/sonat.arm.rep.nc")

    [[sa]] # Sensitivity analyses

        [[[xyloc]]] # Sensitivity to X/Y location changes
        activate=boolean(default=True)
        pert=float(default=0.01) # perturbation meridional degrees
        score_type=string(default=None) # score type
        direct=boolean(default=False) # recompute EOFs if direct
        htmlfile=file(default="ARM/sonat.sa.xyloc.html")

        [[[__many__]] # Generic sensitivity analyser
        activate=boolean(default=True)
